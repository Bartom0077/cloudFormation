# Parameters:
#   InstanceName:
#     Type: String
#     Default: myInstance
#     MaxLength: 20

#   InstanceType:
#     Type: String
#     Default: t2.micro
#     AllowedValues:
#       - t2.micro
#       - t2.small
#       - t2.medium
#       - m1.small
#       - m1.large
#     Description: Enter t2.micro, t2.small, t2.medium, m1.small, or m1.large. Default is t2.micro.

#   KeyPair:
#     Type: AWS::EC2::KeyPair::KeyName
#     Default: kops_key

#   VPNConnection:
#     Type: String
#     Default: Poland
#     AllowedValues:
#       - Poland
#       - Germany
#     Description: Select current location of VPN server

Mappings: 
  RegionMap: 
    eu-central-1: 
      AMI: ami-098efcc0d4f80810e
    eu-west-1: 
      AMI: ami-04149c54d7c56180d
    eu-west-2:
      AMI: ami-098efcc0d4f80810e
    eu-west-3:
      AMI: ami-098efcc0d4f80810e
    eu-north-1:
      AMI: ami-098efcc0d4f80810e
  VPNServers:
    Poland: 
      IP: 95.214.0.0/16
    Germany: 
      IP: 5.180.0.0/16

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
       - Key: stack
         Value: development

  mySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref myVPC
      CidrBlock: 10.0.9.0/24
      MapPublicIpOnLaunch: true
      Tags:
      - Key: stack
        Value: development

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: stack
        Value: development
  myVPCAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref myVPC
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
  myRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref myRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway
  mySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref mySubnet 
      RouteTableId: !Ref myRouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh from Nord VPN servers in Poland
      VpcId: !Ref myVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !FindInMap [ VPNServers, !Ref VPNConnection, IP ]
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !FindInMap [ VPNServers, !Ref VPNConnection, IP ]
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId:  !FindInMap [ RegionMap, !Ref "AWS::Region", AMI ]
      KeyName: !Ref KeyPair
      SubnetId:
        Ref: mySubnet
      SecurityGroupIds: 
        - Ref: InstanceSecurityGroup
      Tags:
        - Key: "Name"
          Value: !Ref InstanceName
        